{"decks":[{"cards":[{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Calls constructor of parent class \nSo no need for same constructor","word":"Super() method","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Variable name with an object type","word":"Declaration","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Slower response","word":"More RAM used =","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Maintainability\nFlexibility \nExtensibility\nData hiding and security","word":"Advantages of encapsulation","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"public int Fib (int n) {\nif (n == 1 || n == 2) {\nreturn n;\n} \nelse {\nn = Fib(n-1) + Fib (n); \n}\nreturn n;","word":"Fibonacci algorithm pseudo code","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Has main method","word":"Driver class","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1305793+07:00[Asia\/Jakarta]","definition":"LinkedList<Type> name = new LinkedList<Type>()","word":"Declaring a new linked list","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Making the fields in a class private and providing access via public methods","word":"Encapsulation","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1275895+07:00[Asia\/Jakarta]","definition":"An abstract entity with states and behaviours","word":"Object","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"\u2022 Easier debugging between individual modules\n\u2022 Testing done in sections\n\u2022 Speedier completion\n\u2022 Code blocks reusable\n\u2022 Expertise in narrow fields when working in a programming team and faster","word":"Advantages of modularity","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Increase maintenance overheads","word":"Why are dependancies bad?","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Is a (triangle end arrow)","word":"Inheritance","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Size - Increased complexity & more memory required to store\nSpeed - Only good for long projects, not short term ones\nLarger size of program = coders spent more time on it \nEffort - Not suitable for all scenarios\nUses a lot of system resources","word":"Disadvantages of OOP","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Variable declared inside a function, cannot be accessed outside of it","word":"Local variable","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Declare, Instantiate, Initialize","word":"Order of creation","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Cannot be broken down into smaller data types","word":"Primitive Data Types (Defintion)","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Different forms of the same method","word":"Polymorphism","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"'set' value of private fields","word":"Mutator","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"a method that is called when an object is instantiated to assign default values","word":"Constructor (definition)","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Breaking down a problem into several objects","word":"Decomposition","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Easier for you to write code and for others to understand\nProgrammer only needs to remember one method name\nExtensible as new subclasses would be able to work with them","word":"Advantages of Polymorphism","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"int\nlong\ndouble\nchar \nBoolean","word":"Primitive data types examples","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Code can be moved to mutual superclass\nBetter organization\nSmaller compilation units\nFlexible inheriting classes \nReusability \nExtensibility \nData hiding and overriding","word":"Advantages of inheritance 2","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1305793+07:00[Asia\/Jakarta]","definition":"Dynamic version of an array","word":"Array list","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"'new' used to call constructor and initializes the new object","word":"Initialization","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Data hiding","word":"Other name for encapsulation","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"the same name as the class, and the class can have more than one constructor","word":"The constructor has","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1275895+07:00[Asia\/Jakarta]","definition":"States and behaviours","word":"Inside an object","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Uses (dotted arrow)\nExample: Customer and order ID","word":"Dependancy","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"'get' methods to return value of private fields","word":"Accessor","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Public","word":"+ symbol","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"No longer abstract, specific when it has a name and uses the 'new' keyword to create object","word":"Instantiation","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Explicitly identifies an object, class, interface, method, or variable (cannot start with a number)","word":"Identifier","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Modifies our implemented code without breaking the code of others using our code","word":"Advantage of encapsulation (Main)","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Object type newname = new Objecttype (parameters)","word":"Creating a new object","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Class only","word":"Private accessor","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1305793+07:00[Asia\/Jakarta]","definition":"Execute more slowly and cause stack overrun","word":"Disadvantages of recursion","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Collection of statements that are grouped together to perform an operation","word":"Method","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Protected","word":"# symbol","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Speed of completion (Faster development)\nExpenses (less)\nInformation hiding\nSimplifies testing (when inheriting - as functionalities in parent class does not have to be re-tested)\nExpertise in narrow field when splitting into modules\nProblem: Communication & Coordination, mistrust between employees affect quality","word":"Team vs Individuals (Programming team)","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Has a (diamond end arrow)","word":"Aggregation","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Named storage that our programs can manipulate","word":"Variable","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Protective barrier \nData controlled through an interface","word":"Reasons for encapsulation","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"One object acquires the properties (states and behaviours) of another with the keyword extends","word":"Inheritance (definition)","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Private","word":"- symbol","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Doesn't have main method","word":"Provider class","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Extensible \nReusable","word":"Advantages of using classes","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Same method but different functionality in another class","word":"Overriding","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Use of common character sets (Unicode)\nPlatform independent high level languages (JVM)","word":"Internationalisation","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Class diagram","word":"UML diagram in IB","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Procedures: Void \nFunctions: Return values","word":"2 types of return values","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Time saving \nRe-usable algorithms (like complex algorithms)\nProgrammers reliant on libraries\nReliable as they've been tested frequently","word":"Advantages of libraries","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Sorting algorithms (Don't have to be reinvented)\nComplex algorithms (Processed and reused)","word":"Time saving (libraries - algorithms)","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1305793+07:00[Asia\/Jakarta]","definition":"Used to create clearer and simpler versions of several algorithms than their iterative relatives","word":"Advantages of recursion","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1305793+07:00[Asia\/Jakarta]","definition":"Reference is the name of an object \nThe variable of a reference type holds a pointer to an object of its type\nAnything that isn't a primitive data type","word":"Reference as a data type","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Inside a class but outside a method","word":"Where are instance variables declared?","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Minimizing duplicate code \nSharing common code amongst classes\nEasy to find where it went wrong","word":"Advantages of inheritance","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Instance\nParameter\nLocal","word":"Three types of variables","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Group of classes organized together and well tested so can be accessed often","word":"Library","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Logically inconsistent - may not be the same case across inheriting classes\nData duplication leading to waste of memory space\nChanges in one class may not apply to all inheriting classes","word":"Disadvantages of inheritance","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Class and Subclass","word":"Protected accessor","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Part of the method declaration - combination of method name and parameters","word":"Method signature","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Testing \nPlagiarism\nOpen source movement\nAI\n(T, P, OS, AI)","word":"Ethical issues of programmers","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Every instantiated object gets its own copy and is used throughout the class","word":"Instance variable","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1305793+07:00[Asia\/Jakarta]","definition":"Unknown implementation details \nActions\/methods are standard","word":"Features of ADTs","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1275895+07:00[Asia\/Jakarta]","definition":"Template for the objects","word":"Class","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"*Dynamic data types* such as linked lists so only memory being used is reserved","word":"Which data type should be used?","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Same method but different parameters","word":"Overloading","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Declared inside the brackets of a method, only existing in that method","word":"Parameter variable","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1285865+07:00[Asia\/Jakarta]","definition":"Class and Subclass","word":"Public accessor","perfectStreak":0},{"studyTime":"2024-06-09T22:11:24.1295827+07:00[Asia\/Jakarta]","definition":"Variable or function is shared between all instances of that class","word":"Static","perfectStreak":0}],"name":"OOP"}],"deadlines":[{"name":"DS FE","time":"2024-07-01T09:00:00+07:00[Asia\/Jakarta]"}]}